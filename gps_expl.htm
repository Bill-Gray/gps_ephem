<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0//EN">
<html><head>
   <title> Calibrating timing of astronomical images using navigation satellites </title>
   <link REL="icon" HREF="favicon.ico" TYPE="image/x-icon">
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta name="Author" content="Bill Gray">
</head>

<h1> <IMG SRC="logo.png" ALT="logo">
 Calibrating timing of astronomical images using navigation satellites </h1>

<p> <i> <a href="tools.htm"> Overview of tools for asteroid observers on this site </a> </i> </p>

<ul>
<li> <a href="#overview"> Overview of how to calibrate image timing and why you should do it </a> </li>
<li> <a href="#procedure"> Basic procedure </a> </li>
<li> <a href="#observing"> Some observing considerations </a> </li>
<li> <a href="#tles"> Ephemeris sources </a> </li>
<li> <a href="#sites"> Low-precision site locations and how to fix them </a> </li>
<li> <a href="#required"> How good should I try to get my timing? </a> </li>
<li> <a href="#to_do"> Remaining things to do </a> </li>
<li> <a href="#source"> Source code </a> </li>
<li> <a href="#contact"> Contact info </a> </li>
</ul>

<h2> <a name="overview"> Overview of how to calibrate image timing and why you should do it </a> </h2>

<p> Getting the timing right in astronomical imaging is both
important and surprisingly difficult to do.  The common tendency seems
to be to say that you've corrected the time on your computer using
GPS signals or NTP,  and that therefore,  the time written out in
your image files must be that of the midpoint of the exposure.

<p> Sadly,  while your computer may indeed be synched to have
almost exactly the right time,  the time in your images can still
be considerably off.  I've seen cases where the times were for the
beginning of the exposure.  Or the end of exposure.  Or,  for reasons
that passeth all understanding,  one exposure duration too early.
(Probably the camera returned a signal when it started the exposure,
which the software took to mean the end of the exposure?)  Or the
time the image was written out to the hard disk.

<p> It's relatively common for me to look at astrometric data and see
that one observer is,  relative to the others,  "late" or "early" by
a significant amount.  Those are the good cases;  I can just exclude
their data.  More pernicious are cases where the timing is <i> just
barely </i> off,  enough to bias all their observations a bit,  but
not enough for me to recognize the bias.  To make it (much) worse,
<a href="#systematic"> timing errors are usually systematic,  not
random.</a> </p>

<p> About the only way to really verify that the image times are
correct is to check them against a known object.  Global Navigation
Satellite Systems (GNSS) provide satellites that move about 40 arcseconds
per second (some a bit faster or slower).  If you image one and can
measure the endpoints of its trail to within (say) two arcseconds,
you've basically fixed the time at which the image was taken to within
1/20 second.

<p> Positions are available for GNSS satellites from five systems:
GPS (United States),  GLONASS (Soviet Union/Russia),  Galileo (Europe),
BeiDou (China),  and QZSS (Japan).  The positions should be good to
within centimeters,  more than good enough for our purposes.

<h2> <a name="procedure"> Basic procedure </a> </h2>

<p> <b><i>Note :</b></i> there is
<a href='https://birtwhistle.org.uk/MethodsCheckTiming.htm'>
an excellent outline of how to actually use these tools
on Peter Birtwhistle's site.</a>  Unlike me,  Peter is an
actual observer (I'm more of a math/physics/software guy)
and fills in some details on how you actually get all of this
to work properly. </p>

<p> First,  you'll need to <a href="gps_find.htm"> get a list of
GNSS satellites visible at your location for a given time.</a>  You
can then pick out one or more to observe;  I recommend choosing those
at high elongations from the sun,  but not actually in the earth's
shadow.  The brightness of these satellites tends to drop quickly
when they're far from opposition.  Also,  for reasons discussed
below,  it's well to stick to those lacking an asterisk before
the RA.  You will generally have at least a dozen possible targets
at any given time. </p>

<p> Then,  for each satellite you wish to observe,  you can
<a href="gps_eph.htm"> create ephemerides for a particular satellite</a>
and go out and observe it.  The difference between where you measure
its position and the ephemeris position gives you your timing offset.

<p> I recommend observing multiple satellites (to reduce the chances
for error) and to use different exposure durations.  This last point
is significant.  You could observe lots of satellites with,  say,  a
ten-second exposure,  and determine that your timing was off by
seven seconds,  and adjust your timing accordingly.

<p> What you might fail to notice in this case is that a 20-second
duration would be off by twelve seconds,  if the time reported was
that of the end of the exposure,  plus two seconds while the image
was downloaded from the camera.  There are a <i>lot</i> of possible
failure modes here.  Also,  with more observations,  you can rule
out spurious observations and just use the more reliable data. </p>

<p> Once you've gotten astrometry,  you can <a href="gps_ast.htm">
upload your astrometry and find out how far off you were. </a>  The
tool will figure out which object(s) you observed,  the timing
difference for each observation,  and how far "cross-track" you were
(that is,  the difference between your measured position and the
closest the object should have come to that position).  You'll
also get the average timing and cross-track residual errors,  and
their scatter (standard deviation). </p>

<h2> <a name="observing"> Some observing considerations </a> </h2>

<p> &bull; As mentioned above,
<a href='https://birtwhistle.org.uk/MethodsCheckTiming.htm'>
Peter Birtwhistle has a page with thoughts on how to use these tools. </a> </p>

<p> &bull; Choosing exposure durations is a little tricky.  It's
easier to measure a short streak (and these objects move ~40"/second).
But set too short an exposure time,  and you won't get enough
reference stars with enough SNR for a good astrometric solution.
There's no one-size-fits-all solution here;  you may just have to
play around with exposure lengths until you "get it right" (and
then you <i>still</i> should try a variety of exposure lengths to
make sure the "time" you get is that of mid-exposure,  and not
start or end or something else.)

<p> &bull; Shutter movement can cause trouble as well.  If your
shutter moves left,  then right,  or is an iris-type that opens and
closes,  the mid-exposure time for all pixels will be identical
(some pixels will get a longer exposure than others,  which can
foul up photometry,  but your timing will be unaffected).

<p> But some shutters move (say) right,  stop during the
exposure,  then move right again;  on the next exposure,  the
travel is to the left. That ensures that all pixels get exposed
for the same amount of time,  making photometrists happy.  But it
does mean that the exposure time is a function of where you are
in the image.

<p> Some people have compensated for this,  figuring out how long
it takes the shutter to move and making the reported time a function
of (usually) the x-coordinate within the image.  If you can't do
that,  the only thing I can suggest is getting the target as close
to the center of the image as you can.  (My thanks to Dave Tholen
for bringing up both of the above points.  Dave has to deal with
the additional headache of not knowing at the beginning of the night
if the shutter is on the left side or the right side.)

<p> &bull; Marco Micheli pointed out that some software has a nasty
tendency of assuming that one-second precision should be good
enough for anybody.  So you can measure time to milliseconds,
then have the time that's written out be rounded (or truncated!)
to the nearest second.

<p> &bull; Rob Seaman has pointed out that you still really want to
have a stable hardware clock.  (Without one,  your time will start
to drift shortly after you calibrate it.)  The
<a href='https://millerjs.org/timehat'> TimeHat </a> looks to be
a high-quality,  inexpensive solution... hobbled (as of late 2022)
by supply-chain issues : it uses a Raspberry Pi,  currently
almost completely unavailable.  I've also heard good things
about the <a href='https://siderealtechnology.com/TimeServer.html'>
SiTech Time Server</a>.  </p>

<p> Note that use of an excellent clock doesn't relieve you of the
need to check timing.  The aforementioned issues of software or
hardware mangling your precise timing still apply. </p>

<h2> <a name="tles"> Ephemeris sources </a> </h2>

<p> <i>Usually</i>,  the tools on this site can just give you an
accurate position for the GNSS satellites,  and you can regard that
as the answer you'd get if your timing was good to within 1/100
second or so,  and possibly better (ten-millisecond accuracy has
been tested;  millisecond-level accuracy is expected,  but I haven't
figured out a way to test it yet.)

<p> Positions at that level of accuracy are
available a few days in advance for GPS,  GLONASS,  and Galileo satellites.
For BeiDou and QZSS satellites,  you only get that level
of accuracy a few days late.  These tools will give you positions
for such satellites in those cases,  usually good to within a few
arcminutes.  So you can go out,  observe a BeiDou or QZSS satellite,
then wait a few days for the precise ephemerides to become available.
Once you've got them,  you can use them to check how accurate your
timing was.

<p> I realize that this is somewhat annoying.  Unfortunately,  we
seem to be stuck with it.  I'm getting the "imprecise" positions
from <a href="tle_info.htm"> TLEs (Two-Line Elements)</a>.  Without
those,  we'd have no idea where to look in advance for BeiDou or QZSS
objects.  We'd know exactly where they had been, but not where to
point our telescopes tonight.

<p> This used to be somewhat limiting.  However,  there are now plenty
of GPS,  GLONASS,  and Galileo satellites.  My recommendation would be
to just use those constellations.

<h2> <a name="sites"> Low-precision site locations and how to fix them </a> </h2>

<p> The positions given for observatories are,  with few exceptions,
from <a href="https://www.minorplanetcenter.net/iau/lists/ObsCodes.html">
a list of observatories maintained by the Minor Planet Center</a>.
(An <a href="https://projectpluto.com/mpc_stat.htm"> extended version
of the same list is available</a> that adds a few details and explanations.)
The MPC list provides,  at best,  a precision of about 6.4 meters in
altitude and latitude (10<sup>-6</sup> of the earth's radius).  In
some cases,  one or even two fewer digits are given.  When that
happens,  you get a warning message about the lack of precision. </p>

<p> The degree to which you should worry about this varies.  At
least one user of these tools is investigating errors at the millisecond
level.  In one millisecond,  a GPS satellite moves about three meters.
If your observatory positions is chopped off to 64-meter precision,
you can still correct your timing to within about 40 milliseconds.
For most people, <a href="#required"> that's more than good enough. </a> </p>

<p> You <i>may</i> find an 'observatory code' in my
<a href="https://github.com/Bill-Gray/find_orb/blob/master/rovers.txt">
errata to the MPC observatory list</a> that gives correct precision.
This can be particularly helpful for sites with multiple telescopes;
MPC may provide one obscode for the entire site,  instead of a code for
your specific telescope.  (Such lumping is almost never a problem for
minor planet observing,  but is a significant source of error for artsat
observing.)

<p> Also,  you can <a href="#contact"> send me your latitude,  longitude,
and altitude</a> and I'll either correct the MPC's position or add
an entirely new "MPC code" (unofficial,  of course!) so you can get
correct data. </p>

<h2> <a name="required"> How good should I try to get my timing? </a> </h2>

<p> The required timing accuracy depends largely on how fast the objects
you observe are moving.  Let's say you sometimes look at objects moving
as fast as 0.2 arcseconds/second (= 12"/minute = 12'/hour),  and your
astrometry is good to 0.5 arcseconds. </p>

<p> In that case,  if your timing was bad by 2.5 seconds,  it would
introduce an error of 0.5",  meaning it would contribute as much error
as your ability to measure the object's position.  You really want to
knock the error down to something much less than that.  I would be
inclined to worry about anything that adds more than about 20% to the
astrometric error;  for that,  you'd want to get the timing error
down to 2.5 * 20% = half a second. </p>

<p> <a name="systematic"></a>
 Some would argue you should strive for still more accurate timing.
The pernicious thing about timing errors is that they are likely to
bias all of your observations by the same amount.  In contrast,
your astrometric errors will (usually) cancel out;  you'll be off
by +0.3 arcseconds the first time,  -0.2 the next,  and so on.
Get enough data,  and you'll gradually improve things. </p>

<p> Timing errors,  on the other hand,  are usually systematic,
not random.  If your clock is off by 2.5 seconds,  and there's
only a small random component to the timing errors,  you'll be
off by (say) +2.5 seconds,  +2.4 seconds, +2.7 seconds...  no
matter how much data you gather,  it'll all be biased the same
way. </p>

<p> The tools on these pages really ought to let you knock down
timing problems to be a tiny fraction of your overall errors,
and you'll usually find it relatively easy to do so. </p>

<h2> <a name="desigs"> Designations for GNSS satellites </a> </h2>

<p> There are,  depending on how you look at it,  up to four different
schemes by which GNSS satellites are designated,  making it sometimes
difficult to know about which satellite one is speaking. </p>

<p> &bull; LNN - letter and two digits.  The letter will be G for
GPS, R for the (Russian) GLONASS satellites, C for the (Chinese)
BeiDou satellites,  E for (European) Galileo,  J for (Japanese) QZSS
satellites,  or I for (Indian) INSS,  with other letters doubtless to
be added as other countries put up their satellites. </p>

<p> For GPS satellites,  the two digits refer to the pseudo-random
number (PRN) sequence used by that satellite.  Some re-use occurs here,
so (for example) G06 first was given to the satellite G003 = 1978-093A;
in March 1994,  the designation was passed on to G036 = 1994-016A;
in March 2014,  it was passed on to G049 = 2009-014A;
in May 2014,  it was again passed on to G067 = 2014-026A.  So,
one designation,  but used by four satellites at different times. </p>

<p> Because of these reassignments,  the LNN scheme has the drawback
that you don't really know which satellite is meant,  unless you have
a date as well.  However,  it's widely used in the GNSS community. </p>

<p> &bull; LNNN - letter and three digits.  The letter will be the
same as for the above system;  the three digits will be different.
This appears to be satellite-specific,  and isn't passed around the
way the letter/two-digit designations are. </p>

<p> &bull; YYYY-NNNL - year,  number,  letter.  This is the "international"
satellite designation (of a sort used for all satellites,  not just
GNSS ones.)  It gives the year of launch,  followed by the number of
the launch within the year.  The letter specifies a particular piece from
that launch (there might be,  say,  an A and a B piece that are satellites
delivered by that launch,  and a C piece which is the booster left as
junk from the launch.) </p>

<p> &bull; YYNNNL : the international designation is frequently abbreviated
to a two-digit year with no dash.  'YY' of 57 or above is implicitly for
1957-1999. 'YY' of 56 or less is for 2000-2056.  Presumably,  our
children will have to work out a solution for the Y2057 Crisis. </p>

<h2> <a name="to_do"> Remaining things to do </a> </h2>

<p> &bull;  I've written code to do precovery searches for GNSS
sats:  give it a list of where you took images over the years
("I got the following RA/dec rectangle at thus-and-such times"),
and it will tell you where and when you got satellites.

<p> The problem with this is that there are currently about 80 GNSS
satellites, or about one in every 500 square degrees of sky.  Go back
a few years,  and it's a lot less than that.  If you're a big
asteroid survey,  you'll still have plenty of opportunities to
spot-check your timing (i.e.,  you don't get checking on every image,
but enough to see night-to-night variations).  For smaller scale
observers, you'll just get a spot-check at larger intervals.

<p> One such check found <a href="https://www.projectpluto.com/temp/neat.txt">
170 GNSS satellites found by the NEAT survey</a> between 1996 to 2002,
and I've run similar searches for three other telescopes.  But the
code is not particularly easy for anyone else to use at this point.

<h2> <a name="source"> Source code </a> </h2>

<p> <a href="https://github.com/Bill-Gray/gps_ephem/"> C and C++ source code
for these tools is available on GitHub. </a> As noted there,  you probably
don't really need it if you're just trying to fix your timing.  I
do see that a few people have downloaded the source.  I will bet
that most of them made use of the bits for puzzling out satellite
positions for use in other projects,  quite possibly not related
in any way to astronomy or image timing.  (Not,  of course,  that
there's anything wrong with that.) </p>

<h2> <a name="contact"> Contact info </a> </h2>

<p> I can be reached at
p&#x202e;&#x43e;&#xe7;.&ouml;t&#x16d;lp&#x165;&#x441;&eacute;&#x458;&ocirc;&#x159;p&#x40;ot&uacute;l&#x202c;m.
If you're a human instead of a spambot,  you can probably figure out
how to remove the diacritical marks... </p>

</body></html>
